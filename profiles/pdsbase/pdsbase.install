<?php

/**
 * @file
 * Install, update and uninstall functions for the standard installation
 *   profile.
 */

use Drupal\shortcut\Entity\Shortcut;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function pdsbase_install() {
  // Set front page to "node".
  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('page.front', '/node')
    ->save(TRUE);

  // Allow visitor account creation with administrative approval.
  $user_settings = \Drupal::configFactory()->getEditable('user.settings');
  $user_settings->set('register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)
    ->save(TRUE);

  // Enable default permissions for system roles.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['access comments']);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, [
    'access comments',
    'post comments',
    'skip comment approval',
  ]);

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  // Enable the Contact link in the footer menu.
  /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  $menu_link_manager->updateDefinition('contact.site_page', ['enabled' => TRUE]);

  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['access site-wide contact form']);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['access site-wide contact form']);

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['access shortcuts']);

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();

  // Allow all users to use search.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['search content']);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['search content']);

  // Enable the admin theme.
  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save(TRUE);

  // Can add code in here to make nodes, terms, etc.
  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('default', 'enterpriseplus')
    ->save();

  // Admin theme.
  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('admin', 'seven')
    ->save();
}


/**
 * Implements hook_install_tasks().
 */

function pdsbase_install_tasks($install_state) {
  return [
    'pdsbase_cleanup' => [
      'display_name' => t('Rebuild and Cleanup'),
      'display' => TRUE,
      'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
      'type' => 'batch',
      'function' => 'pds_cleanup_tasks',
    ],
  ];
}


/**
 * This function rebuilds all the node permissions.
 */
function pds_cleanup_tasks() {
  node_access_rebuild();
  \Drupal::service('module_installer')->install(['pds_configuration_base_data']);

  //TODO - Commenting this out temporarily as we won't be using groups exactly as this is implemented.
  //Adding the base users to the Groups.
  /*$group = \Drupal\group\Entity\Group::load(1);
  $group->addMember(user_load_by_name('user1_ta_g1'));
  $group->addMember(user_load_by_name('user2_ta_g1'));
  $group->addMember(user_load_by_name('user1_tu_g1'));
  $group->addMember(user_load_by_name('user2_tu_g1'));
  $result = $group->save();

  $group = \Drupal\group\Entity\Group::load(2);
  $group->addMember(user_load_by_name('user1_ta_g2'));
  $group->addMember(user_load_by_name('user2_ta_g2'));
  $group->addMember(user_load_by_name('user1_tu_g2'));
  $group->addMember(user_load_by_name('user2_tu_g2'));
  $result = $group->save();*/
}
